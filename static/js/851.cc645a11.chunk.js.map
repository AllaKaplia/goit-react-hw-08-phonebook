{"version":3,"file":"static/js/851.cc645a11.chunk.js","mappings":"2QAEaA,EAAeC,EAAAA,EAAAA,GAAH,uJASZC,EAAcD,EAAAA,EAAAA,GAAH,4NAWXE,EAAYF,EAAAA,EAAAA,OAAH,2XAkBTG,EAAeH,EAAAA,EAAAA,KAAH,0F,uCCQzB,EAtCoB,WAClB,IAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAW1B,OAJAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,MACV,GAAE,CAACV,KAGF,2BACGK,IAAW,SAACM,EAAA,EAAD,IACXJ,IAAS,uBAAIA,IACbL,EAAgBU,OAAS,GACxB,SAACjB,EAAD,UACGO,EAAgBW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACnB,UAACnB,EAAD,YACE,SAAC,MAAD,CAAkBoB,KAAM,KAAK,KAAC,UAAClB,EAAD,WAAee,EAAK,KAAGC,MACrD,UAACjB,EAAD,CAAWoB,KAAK,SAASC,QAAS,kBAlBlB,SAACH,GAC3BhB,GAASoB,EAAAA,EAAAA,IAAcJ,IACvBK,EAAAA,GAAAA,QAAc,gCACf,CAemDC,CAAoBN,EAA1B,EAAlC,WACE,SAAC,MAAD,IAAmB,cAHLA,EADC,OAWvB,uBAAG,yBAIV,C,8IC1CYV,EAAkB,SAAAiB,GAAK,OAAIA,EAAMC,SAASA,SAASC,SAA5B,EAEvBjB,EAAc,SAAAe,GAAK,OAAIA,EAAMC,SAASA,SAASjB,KAA5B,EAEnBmB,EAAgB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,MAAnB,EAErBvB,GAAwBwB,EAAAA,EAAAA,IACnC,CAT4B,SAAAL,GAAK,OAAIA,EAAMC,SAASA,SAASK,KAA5B,EAShBH,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,SAACG,GAAD,OACrBA,EAAQhB,KAAKiB,cAAcC,SAASL,EAAOI,cADtB,GAGxB,G","sources":["components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n    list-style-type: none;\n    padding: 0;\n    margin: 0 auto;\n\n    max-width: 800px;\n    border: 1px solid greenyellow;\n`;\n\nexport const ContactItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px;\n    border-bottom: 1px solid #ccc;\n    &:last-child {\n        border-bottom: none;\n    }\n`\n\nexport const RemoveBtn = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    background-color: #fff;\n    color: #e31c5f;\n    border: 1px solid #e31c5f;\n    border-radius: 5px;\n    padding: 5px 15px;\n    font-size: 20px;\n    cursor: pointer;\n    &:hover, &:focus {\n        background-color: #e31c5f;\n        color: #fff;\n    }\n`;\n\nexport const DataContacts = styled.span`\n    font-size: 20px;\n    font-weight: 500;\n    color: #3f3030;\n`;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeContact, fetchContacts } from '../../redux/contactsOperations';\nimport { selectError, selectIsLoading, selectVisibleContacts } from '../../redux/selectors';\nimport toast from 'react-hot-toast';\nimport { ContactsList, ContactItem, RemoveBtn, DataContacts } from './ContactsList.styled';\nimport Loader from 'components/Loader';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { FcTwoSmartphones } from 'react-icons/fc';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const loading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const handleRemoveContact = (id) => {\n    dispatch(removeContact(id));\n    toast.success('Contact deleted successfully!');\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      {visibleContacts.length > 0 ? (\n        <ContactsList>\n          {visibleContacts.map(({ name, number, id }) => (\n            <ContactItem key={id}>\n              <FcTwoSmartphones size={40}/> <DataContacts>{name}: {number}</DataContacts>\n              <RemoveBtn type='button' onClick={() => handleRemoveContact(id)}>\n                <MdDeleteForever />\n                Remove\n              </RemoveBtn>\n            </ContactItem>\n          ))}\n        </ContactsList>\n      ) : (\n        <p>No contacts found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilters = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["ContactsList","styled","ContactItem","RemoveBtn","DataContacts","dispatch","useDispatch","visibleContacts","useSelector","selectVisibleContacts","loading","selectIsLoading","error","selectError","useEffect","fetchContacts","Loader","length","map","name","number","id","size","type","onClick","removeContact","toast","handleRemoveContact","state","contacts","isLoading","selectFilters","filter","createSelector","items","contact","toLowerCase","includes"],"sourceRoot":""}