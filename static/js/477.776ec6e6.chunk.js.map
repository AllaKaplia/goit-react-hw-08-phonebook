{"version":3,"file":"static/js/477.776ec6e6.chunk.js","mappings":"6NAEaA,EAAcC,EAAAA,EAAAA,MAAH,8IAQXC,EAAcD,EAAAA,EAAAA,MAAH,wG,uCCaxB,EAjBuB,WACrB,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAE3B,OACE,UAACP,EAAD,WAAa,UAEX,SAACE,EAAD,CACEM,KAAK,OACLC,MAAOJ,EACPK,KAAK,SACLC,SAAU,SAAAC,GAAG,OAAIT,GAASU,EAAAA,EAAAA,GAAcD,EAAIE,OAAOL,MAAMM,QAA5C,MAIpB,C,8ICjBYC,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,SAA5B,EAEvBC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,SAASA,SAASG,KAA5B,EAEnBd,EAAgB,SAAAU,GAAK,OAAIA,EAAMC,SAASb,MAAnB,EAErBiB,GAAwBC,EAAAA,EAAAA,IACnC,CAT4B,SAAAN,GAAK,OAAIA,EAAMC,SAASA,SAASM,KAA5B,EAShBjB,IACjB,SAACW,EAAUb,GACT,OAAOa,EAASb,QAAO,SAACoB,GAAD,OACrBA,EAAQf,KAAKgB,cAAcC,SAAStB,EAAOqB,cADtB,GAGxB,G","sources":["components/FilterContacts/FilterContacts.styled.jsx","components/FilterContacts/FilterContacts.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LabelFilter = styled.label`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    gap: 30px;\n    margin-bottom: 10px;\n`;\n\nexport const InputFilter = styled.input`\n    padding: 5px;\n    border: 2px solid greenyellow;\n    border-radius: 5px;\n`;","import React from \"react\";\nimport { LabelFilter, InputFilter } from \"./FilterContacts.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilters } from \"redux/selectors\";\nimport { changedFilter } from \"redux/filterSlice\";\n\nconst FilterContacts = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  return (\n    <LabelFilter>\n      Filter\n      <InputFilter\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={evt => dispatch(changedFilter(evt.target.value.trim()))} \n      />\n    </LabelFilter>\n  );\n};\n\nexport default FilterContacts;","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilters = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["LabelFilter","styled","InputFilter","dispatch","useDispatch","filter","useSelector","selectFilters","type","value","name","onChange","evt","changedFilter","target","trim","selectIsLoading","state","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","items","contact","toLowerCase","includes"],"sourceRoot":""}